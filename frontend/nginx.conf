server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;  # index 명시적 추가

    # ------------------------------
    # 🔁 API 프록시 (/api/) - 올바른 서비스명 사용
    # ------------------------------
    location /api/ {
        # Docker Compose 서비스명 'backend' 사용
        proxy_pass http://backend:9000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # CORS 헤더
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

        # OPTIONS 요청 대응 (preflight)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # ------------------------------
    # 🔍 헬스체크 (/health) - 백엔드 직접 연결
    # ------------------------------
    location ~ ^/health/?$ {
        proxy_pass http://backend:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        add_header Access-Control-Allow-Origin * always;
    }

    # ------------------------------
    # ℹ️ 모델 정보 API (/model-info)
    # ------------------------------
    location ~ ^/model-info/?$ {
        proxy_pass http://backend:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin * always;
    }

    # ------------------------------
    # 📦 정적 리소스 캐시 비활성화 (/components 등)
    # ------------------------------
    location /components/ {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        add_header Access-Control-Allow-Origin * always;
        try_files $uri $uri/ =404;
    }

    # ------------------------------
    # 🌐 메인 정적 파일 핸들링 (SPA) - 개선된 fallback
    # ------------------------------
    location / {
        try_files $uri $uri/ @fallback;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        add_header Access-Control-Allow-Origin * always;
    }

    # SPA fallback 처리
    location @fallback {
        rewrite ^.*$ /index.html last;
    }

    # ------------------------------
    # ❗ 에러 핸들링 개선
    # ------------------------------
    error_page 404 /index.html;
    error_page 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # ------------------------------
    # 📝 로깅 개선
    # ------------------------------
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}
